<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- Process annotations on registered beans like @Autowired... -->
	<context:annotation-config />

	<!-- Enables the Spring MVC @Controller programming model -->
	<mvc:annotation-driven />

	<context:component-scan base-package="org.kdea.spring.controller" />
	<context:component-scan base-package="org.kdea.spring.service" />
	<context:component-scan base-package="org.kdea.spring.websocket" />
	<context:component-scan base-package="org.kdea.spring.springdb" />
	<context:component-scan base-package="org.kdea.spring.eventcon" />
	
	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
		<beans:property name="contentType" value="text/html; charset=UTF-8" />
		<beans:property name="order" value="0" />
	</beans:bean>
	<!-- 타일즈 뷰 리졸버 선언 -->
	<beans:bean id="viewResolver"
		class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<beans:property name="viewClass">
			<beans:value>
				org.springframework.web.servlet.view.tiles3.TilesView
			</beans:value>
		</beans:property>
		<beans:property name="order" value="1" />
	</beans:bean>

	<!-- Tiles configuration -->
	<beans:bean id="tilesConfigurer"
		class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
		<beans:property name="definitions">
			<beans:list>
				<beans:value>/WEB-INF/tiles/tiles-definition.xml</beans:value>
				<beans:value>/WEB-INF/views/**/views.xml</beans:value>
			</beans:list>
		</beans:property>
	</beans:bean>

	<beans:bean id="simpleChatHandler"
		class="org.kdea.spring.websocket.SimpleWebSocketHandler" />
	<websocket:handlers>
		<websocket:mapping path="/simpleChat" handler="simpleChatHandler" />
		<websocket:handshake-interceptors>
			<beans:bean class="org.kdea.spring.websocket.HandshakeInterceptor" />
		</websocket:handshake-interceptors>
	</websocket:handlers>
	
	<!-- spring jdbc  -->
	<beans:bean id="dataSource" class="oracle.jdbc.pool.OracleDataSource">
		<beans:property name="dataSourceName" value="ds" />
		<beans:property name="URL"
			value="jdbc:oracle:thin:@192.168.8.55:1521:xe" />
		<beans:property name="user" value="scott" />
		<beans:property name="password" value="tiger" />
	</beans:bean>
</beans:beans>
